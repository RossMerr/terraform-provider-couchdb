// Code generated by go-swagger; DO NOT EDIT.

package database

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/rossmerr/couchdb_go/models"
)

// DesignDocAllPostReader is a Reader for the DesignDocAllPost structure.
type DesignDocAllPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DesignDocAllPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDesignDocAllPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDesignDocAllPostNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDesignDocAllPostOK creates a DesignDocAllPostOK with default headers values
func NewDesignDocAllPostOK() *DesignDocAllPostOK {
	return &DesignDocAllPostOK{}
}

/*DesignDocAllPostOK handles this case with default header values.

Request completed successfully
*/
type DesignDocAllPostOK struct {
	/*Response signature
	 */
	ETag string

	Payload *models.Pagination
}

func (o *DesignDocAllPostOK) Error() string {
	return fmt.Sprintf("[POST /{db}/_design_docs][%d] designDocAllPostOK  %+v", 200, o.Payload)
}

func (o *DesignDocAllPostOK) GetPayload() *models.Pagination {
	return o.Payload
}

func (o *DesignDocAllPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	o.Payload = new(models.Pagination)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDesignDocAllPostNotFound creates a DesignDocAllPostNotFound with default headers values
func NewDesignDocAllPostNotFound() *DesignDocAllPostNotFound {
	return &DesignDocAllPostNotFound{}
}

/*DesignDocAllPostNotFound handles this case with default header values.

Requested database not found
*/
type DesignDocAllPostNotFound struct {
	Payload *models.ErrorResponse
}

func (o *DesignDocAllPostNotFound) Error() string {
	return fmt.Sprintf("[POST /{db}/_design_docs][%d] designDocAllPostNotFound  %+v", 404, o.Payload)
}

func (o *DesignDocAllPostNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DesignDocAllPostNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DesignDocAllPostBody design doc all post body
swagger:model DesignDocAllPostBody
*/
type DesignDocAllPostBody struct {

	// docs
	Docs []*models.Keys `json:"docs"`
}

// Validate validates this design doc all post body
func (o *DesignDocAllPostBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDocs(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DesignDocAllPostBody) validateDocs(formats strfmt.Registry) error {

	if swag.IsZero(o.Docs) { // not required
		return nil
	}

	for i := 0; i < len(o.Docs); i++ {
		if swag.IsZero(o.Docs[i]) { // not required
			continue
		}

		if o.Docs[i] != nil {
			if err := o.Docs[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "docs" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *DesignDocAllPostBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DesignDocAllPostBody) UnmarshalBinary(b []byte) error {
	var res DesignDocAllPostBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
