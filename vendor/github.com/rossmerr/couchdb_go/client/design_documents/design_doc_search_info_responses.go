// Code generated by go-swagger; DO NOT EDIT.

package design_documents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/rossmerr/couchdb_go/models"
)

// DesignDocSearchInfoReader is a Reader for the DesignDocSearchInfo structure.
type DesignDocSearchInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DesignDocSearchInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDesignDocSearchInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDesignDocSearchInfoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDesignDocSearchInfoUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDesignDocSearchInfoNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDesignDocSearchInfoOK creates a DesignDocSearchInfoOK with default headers values
func NewDesignDocSearchInfoOK() *DesignDocSearchInfoOK {
	return &DesignDocSearchInfoOK{}
}

/*DesignDocSearchInfoOK handles this case with default header values.

Request completed successfully
*/
type DesignDocSearchInfoOK struct {
	/*Response signature
	 */
	ETag string
	/*chunked
	 */
	TransferEncoding string

	Payload *DesignDocSearchInfoOKBody
}

func (o *DesignDocSearchInfoOK) Error() string {
	return fmt.Sprintf("[GET /{db}/_design/{ddoc}/_search_info/{index}][%d] designDocSearchInfoOK  %+v", 200, o.Payload)
}

func (o *DesignDocSearchInfoOK) GetPayload() *DesignDocSearchInfoOKBody {
	return o.Payload
}

func (o *DesignDocSearchInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Transfer-Encoding
	o.TransferEncoding = response.GetHeader("Transfer-Encoding")

	o.Payload = new(DesignDocSearchInfoOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDesignDocSearchInfoBadRequest creates a DesignDocSearchInfoBadRequest with default headers values
func NewDesignDocSearchInfoBadRequest() *DesignDocSearchInfoBadRequest {
	return &DesignDocSearchInfoBadRequest{}
}

/*DesignDocSearchInfoBadRequest handles this case with default header values.

Invalid request
*/
type DesignDocSearchInfoBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *DesignDocSearchInfoBadRequest) Error() string {
	return fmt.Sprintf("[GET /{db}/_design/{ddoc}/_search_info/{index}][%d] designDocSearchInfoBadRequest  %+v", 400, o.Payload)
}

func (o *DesignDocSearchInfoBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DesignDocSearchInfoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDesignDocSearchInfoUnauthorized creates a DesignDocSearchInfoUnauthorized with default headers values
func NewDesignDocSearchInfoUnauthorized() *DesignDocSearchInfoUnauthorized {
	return &DesignDocSearchInfoUnauthorized{}
}

/*DesignDocSearchInfoUnauthorized handles this case with default header values.

Read permission required
*/
type DesignDocSearchInfoUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *DesignDocSearchInfoUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{db}/_design/{ddoc}/_search_info/{index}][%d] designDocSearchInfoUnauthorized  %+v", 401, o.Payload)
}

func (o *DesignDocSearchInfoUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DesignDocSearchInfoUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDesignDocSearchInfoNotFound creates a DesignDocSearchInfoNotFound with default headers values
func NewDesignDocSearchInfoNotFound() *DesignDocSearchInfoNotFound {
	return &DesignDocSearchInfoNotFound{}
}

/*DesignDocSearchInfoNotFound handles this case with default header values.

Specified database, design document or view is missed
*/
type DesignDocSearchInfoNotFound struct {
	Payload *models.ErrorResponse
}

func (o *DesignDocSearchInfoNotFound) Error() string {
	return fmt.Sprintf("[GET /{db}/_design/{ddoc}/_search_info/{index}][%d] designDocSearchInfoNotFound  %+v", 404, o.Payload)
}

func (o *DesignDocSearchInfoNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DesignDocSearchInfoNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DesignDocSearchInfoOKBody design doc search info o k body
swagger:model DesignDocSearchInfoOKBody
*/
type DesignDocSearchInfoOKBody struct {

	// name
	Name string `json:"name,omitempty"`

	// search index
	SearchIndex *models.SearchIndex `json:"search_index,omitempty"`
}

// Validate validates this design doc search info o k body
func (o *DesignDocSearchInfoOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSearchIndex(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DesignDocSearchInfoOKBody) validateSearchIndex(formats strfmt.Registry) error {

	if swag.IsZero(o.SearchIndex) { // not required
		return nil
	}

	if o.SearchIndex != nil {
		if err := o.SearchIndex.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("designDocSearchInfoOK" + "." + "search_index")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DesignDocSearchInfoOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DesignDocSearchInfoOKBody) UnmarshalBinary(b []byte) error {
	var res DesignDocSearchInfoOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
