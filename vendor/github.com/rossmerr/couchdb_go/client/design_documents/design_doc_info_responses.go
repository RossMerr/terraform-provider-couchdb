// Code generated by go-swagger; DO NOT EDIT.

package design_documents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/rossmerr/couchdb_go/models"
)

// DesignDocInfoReader is a Reader for the DesignDocInfo structure.
type DesignDocInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DesignDocInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDesignDocInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDesignDocInfoOK creates a DesignDocInfoOK with default headers values
func NewDesignDocInfoOK() *DesignDocInfoOK {
	return &DesignDocInfoOK{}
}

/*DesignDocInfoOK handles this case with default header values.

DRequest completed successfully
*/
type DesignDocInfoOK struct {
	Payload *DesignDocInfoOKBody
}

func (o *DesignDocInfoOK) Error() string {
	return fmt.Sprintf("[HEAD /{db}/_design/{ddoc}/_info][%d] designDocInfoOK  %+v", 200, o.Payload)
}

func (o *DesignDocInfoOK) GetPayload() *DesignDocInfoOKBody {
	return o.Payload
}

func (o *DesignDocInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DesignDocInfoOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DesignDocInfoOKBody design doc info o k body
swagger:model DesignDocInfoOKBody
*/
type DesignDocInfoOKBody struct {

	// name
	Name string `json:"name,omitempty"`

	// view index
	ViewIndex *models.ViewIndex `json:"view_index,omitempty"`
}

// Validate validates this design doc info o k body
func (o *DesignDocInfoOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateViewIndex(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DesignDocInfoOKBody) validateViewIndex(formats strfmt.Registry) error {

	if swag.IsZero(o.ViewIndex) { // not required
		return nil
	}

	if o.ViewIndex != nil {
		if err := o.ViewIndex.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("designDocInfoOK" + "." + "view_index")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DesignDocInfoOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DesignDocInfoOKBody) UnmarshalBinary(b []byte) error {
	var res DesignDocInfoOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
