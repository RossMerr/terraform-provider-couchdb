// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// MembershipReader is a Reader for the Membership structure.
type MembershipReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MembershipReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMembershipOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewMembershipOK creates a MembershipOK with default headers values
func NewMembershipOK() *MembershipOK {
	return &MembershipOK{}
}

/*MembershipOK handles this case with default header values.

Request completed successfully
*/
type MembershipOK struct {
	Payload *MembershipOKBody
}

func (o *MembershipOK) Error() string {
	return fmt.Sprintf("[GET /_membership][%d] membershipOK  %+v", 200, o.Payload)
}

func (o *MembershipOK) GetPayload() *MembershipOKBody {
	return o.Payload
}

func (o *MembershipOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(MembershipOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*MembershipOKBody membership o k body
swagger:model MembershipOKBody
*/
type MembershipOKBody struct {

	// all nodes
	AllNodes []string `json:"all_nodes"`

	// cluster nodes
	ClusterNodes []string `json:"cluster_nodes"`
}

// Validate validates this membership o k body
func (o *MembershipOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *MembershipOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MembershipOKBody) UnmarshalBinary(b []byte) error {
	var res MembershipOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
